@page "/project-details/{Id:int}"
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudContainer Fixed="true" Class="mt-4">
    @if (project != null)
    {
        <MudGrid>
            <MudItem xs="12">
                <div class="d-flex justify-space-between align-center">
                    <MudText Typo="Typo.h4">Project Details</MudText>
                    <MudButton OnClick="GoBack"
                               StartIcon="@Icons.Material.Filled.ArrowBack"
                               Color="Color.Default">
                        Back to Projects
                    </MudButton>
                </div>
            </MudItem>

            <MudItem xs="12" Class="mt-4">
                <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelineAlign="TimelineAlign.Start">
                    @foreach (var phase in projectPhases)
                    {
                        <MudTimelineItem Color="@GetPhaseColor(phase)"
                                         Size="@(phase.Id == 4 ? Size.Large : Size.Medium)"
                                         Variant="@(phase.Id == 4 ? Variant.Filled : Variant.Outlined)">
                            <ItemContent>
                                <MudText Color="@GetPhaseColor(phase)"
                                         Style="cursor: pointer;"
                                         Class="hover-component"
                                         @onclick="() => NavigateToPhase(phase.Id)">
                                    @phase.Name
                                </MudText>
                            </ItemContent>
                        </MudTimelineItem>
                    }
                </MudTimeline>
            </MudItem>

            <MudGrid Class="mt-4">
                <MudItem xs="12" sm="3" Style="display: flex">
                    <MudCard Elevation="3" Class="hover-card" @onclick="@(() => NavigateToToolTree())" Style="height: 100%; width: 100%">
                        <MudCardContent Style="display: flex; flex-direction: column; justify-content: center; align-items: center">
                            <MudText Typo="Typo.h3" Align="Align.Center">Tooltree</MudText>
                            <MudText Typo="Typo.h3" Align="Align.Center" Color="@(IsCompleted ? Color.Success : Color.Warning)" Style="margin-top: 12px">
                                @(IsCompleted ? "Completed" : "In Progress")
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="3" Style="display: flex">
                    <MudCard Elevation="3" Class="hover-card" @onclick="@(() => NavigateToDeliverables())" Style="height: 100%; width: 100%">
                        <MudCardContent Style="display: flex; flex-direction: column; justify-content: center; align-items: center">
                            <MudText Typo="Typo.h3" Align="Align.Center">Deliverables</MudText>
                            <MudText Typo="Typo.h1" Align="Align.Center" Color="Color.Primary" Style="margin-top: 16px">50%</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="3" Style="display: flex">
                    <MudCard Elevation="3" Class="hover-card" @onclick="@(() => NavigateToStatus())" Style="height: 100%; width: 100%">
                        <MudCardContent Style="display: flex; flex-direction: column; justify-content: center; align-items: center">
                            <MudText Typo="Typo.h3" Align="Align.Center">Status</MudText>
                            <div Style="margin-top: 16px">
                                <MudText Typo="Typo.h2" Align="Align.Center">
                                    Doc: <span style="color: var(--mud-palette-primary)">34%</span>
                                </MudText>
                                <MudText Typo="Typo.h2" Align="Align.Center">
                                    Edu: <span style="color: var(--mud-palette-primary)">32%</span>
                                </MudText>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="3" Style="display: flex">
                    <MudCard Elevation="3" Class="hover-card" @onclick="@(() => NavigateToDFS())" Style="height: 100%; width: 100%">
                        <MudCardContent>
                            <MudText Typo="Typo.h3" Align="Align.Center">DFS</MudText>
                            <MudSimpleTable>
                                <thead>
                                    <tr>
                                        <th>DRM</th>
                                        <th>FAT</th>
                                        <th>SAT</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>12</td>
                                        <td>23</td>
                                        <td>32</td>
                                        <td style="color: green">OK</td>
                                    </tr>
                                    <tr>
                                        <td>5</td>
                                        <td>14</td>
                                        <td>26</td>
                                        <td style="color: orange">Progress</td>
                                    </tr>
                                    <tr>
                                        <td>34</td>
                                        <td>17</td>
                                        <td>29</td>
                                        <td style="color: red">NOK</td>
                                    </tr>
                                </tbody>
                            </MudSimpleTable>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>

            @* Basic Information Card *@
                <MudGrid Class="mt-4">
                <MudItem xs="12" sm="6">
                    <MudCard Elevation="3" Class="rounded-lg" Style="height: 100%">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Basic Information</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudList T="Project" Dense="true">
                                <MudListItem>
                                    <MudText><b>EC Number:</b> @project.ECNumber</MudText>
                                </MudListItem>
                                <MudListItem>
                                    <MudText><b>Project Name:</b> @project.ProjectName</MudText>
                                </MudListItem>
                                <MudListItem>
                                    <MudText><b>Type:</b>
                                        <MudChip Color="@GetProjectTypeColor(project.ProjectType.Color)" Size="Size.Small">
                                            @project.ProjectType.Name
                                        </MudChip>

                                    </MudText>
                                </MudListItem>
                            </MudList>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                @* Key Dates Card *@
                <MudItem xs="12" sm="6">
                    <MudCard Elevation="3" Class="rounded-lg" Style="height: 100%">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Key Dates</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudList T="Project" Dense="true">
                                <MudListItem>
                                    <div class="d-flex align-center">
                                        <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Color="Color.Primary" Class="mr-2"/>
                                        <MudText><b>Start Date:</b> @project.StartDate?.ToShortDateString()</MudText>
                                    </div>
                                </MudListItem>
                                <MudListItem>
                                    <div class="d-flex align-center">
                                        <MudIcon Icon="@Icons.Material.Filled.Build" Color="Color.Info" Class="mr-2"/>
                                        <MudText><b>Installation:</b> @project.Installation?.ToShortDateString()</MudText>
                                    </div>
                                </MudListItem>
                                <MudListItem>
                                    <div class="d-flex align-center">
                                        <MudIcon Icon="@Icons.Material.Filled.Flag" Color="Color.Success" Class="mr-2"/>
                                        <MudText><b>SOP:</b> @project.SOP?.ToShortDateString()</MudText>
                                    </div>
                                </MudListItem>
                            </MudList>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>

            @* Project Team Section *@
            <MudGrid Class="mt-4">
                <MudItem xs="12">
                    <MudText Typo="Typo.h6" Class="mb-4">Project Team</MudText>
                </MudItem>

                @* Engineer Card *@
                <MudItem xs="12" sm="4">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Engineer</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <div class="d-flex align-center">
                                @if (project.Engineer?.PhotoData != null)
                                {
                                        <MudAvatar Image="@($"data:image/png;base64,{Convert.ToBase64String(project.Engineer.PhotoData)}")" 
                                                  Class="mr-2" Size="Size.Large" />
                                }
                                else
                                {
                                        <MudAvatar Color="Color.Secondary" Class="mr-2" Size="Size.Large">
                                        @(project.Engineer?.FirstName.FirstOrDefault())@(project.Engineer?.LastName.FirstOrDefault())
                                        </MudAvatar>
                                }
                                <div>
                                    <MudText Typo="Typo.body1">@($"{project.Engineer?.FirstName} {project.Engineer?.LastName}")</MudText>
                                    <MudText Typo="Typo.body2">@project.Engineer?.Position</MudText>
                                </div>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                @* R&M Responsible Card *@
                <MudItem xs="12" sm="4">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">R&M Responsible</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <div class="d-flex align-center">
                                @if (project.RMResponsible?.PhotoData != null)
                                {
                                        <MudAvatar Image="@($"data:image/png;base64,{Convert.ToBase64String(project.RMResponsible.PhotoData)}")" 
                                                  Class="mr-2" Size="Size.Large" />
                                }
                                else
                                {
                                        <MudAvatar Color="Color.Secondary" Class="mr-2" Size="Size.Large">
                                        @(project.RMResponsible?.FirstName.FirstOrDefault())@(project.RMResponsible?.LastName.FirstOrDefault())
                                        </MudAvatar>
                                }
                                <div>
                                    <MudText Typo="Typo.body1">@($"{project.RMResponsible?.FirstName} {project.RMResponsible?.LastName}")</MudText>
                                    <MudText Typo="Typo.body2">@project.RMResponsible?.Position</MudText>
                                </div>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                @* Supplier Card *@
                <MudItem xs="12" sm="4">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Supplier</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <div class="d-flex align-center">
                                @if (project.Supplier?.LogoData != null)
                                {
                                        <MudAvatar Image="@($"data:image/png;base64,{Convert.ToBase64String(project.Supplier.LogoData)}")" 
                                                  Class="mr-2" Size="Size.Large" />
                                }
                                else
                                {
                                        <MudAvatar Color="Color.Secondary" Class="mr-2" Size="Size.Large">
                                        @(project.Supplier?.Name.FirstOrDefault())
                                        </MudAvatar>
                                }
                                <MudText Typo="Typo.body1">@project.Supplier?.Name</MudText>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
            </MudGrid>

            <MudGrid Class="mt-4"> </MudGrid>
    }
    else
    {
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
</MudContainer>


<style>

    .hover-component {
        transition: all 0.3s ease-in-out;
        position: relative;
        padding: 10px;
        border-radius: 4px;
        display: inline-block;
    }

        .hover-component:hover {
            background-color: rgba(12, 128, 233,0.2);
            transform: scale(1.1);
        }

    .hover-card {
        transition: all 0.3s ease-in-out;
        cursor: pointer;
    }

        .hover-card:hover {
            transform: scale(1.02);
            border: 2px solid var(--mud-palette-primary);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
</style>

@code {
    [Parameter] public int Id { get; set; }
    private Project project;
    private List<ProjectPhase> projectPhases = new();
    private bool IsCompleted = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadProject();
    }

    private async Task LoadProject()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        project = await context.Projects
            .Include(p => p.Engineer)
            .Include(p => p.RMResponsible)
            .Include(p => p.Supplier)
            .Include(p => p.ProjectPhase)
            .Include(p => p.ProjectType)
            .Include(p => p.Tooltree)
            .FirstOrDefaultAsync(p => p.Id == Id);

        projectPhases = await context.ProjectPhases.OrderBy(p => p.Order).ToListAsync();

        if (project == null)
        {
            Snackbar.Add("Project not found", Severity.Error);
            NavigationManager.NavigateTo("/projects");
        }
        else
        {
            IsCompleted = project.Tooltree?.IsDone ?? false;  
        }
    }

    private Color GetProjectTypeColor(string colorString)
    {
        if (Enum.TryParse<Color>(colorString, out var color))
        {
            return color;
        }
        return Color.Default;
    }


    private Color GetPhaseColor(ProjectPhase phase) =>
        phase.Id == project.ProjectPhaseId ? Color.Primary :
        phase.Id == 4 ? Color.Success : Color.Default;

    private void GoBack() => NavigationManager.NavigateTo("/projects");
    private void NavigateToPhase(int phaseId) => NavigationManager.NavigateTo($"/tasks/{project.Id}/{phaseId}");
    private void NavigateToDeliverables() => NavigationManager.NavigateTo($"/deliverables/{project.Id}");
    private void NavigateToStatus() => NavigationManager.NavigateTo($"/status/{project.Id}");
    private void NavigateToDFS() => NavigationManager.NavigateTo($"/dfs/{project.Id}");
    private void NavigateToToolTree() => NavigationManager.NavigateTo($"/tooltree/{project.Id}");
}
